// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ðŸ‘¤ MODÃˆLE UTILISATEUR SIMPLIFIÃ‰
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   // Hash bcrypt
  nom       String?
  prenom    String?
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // ðŸ”— RELATIONS
  qrCodes   QrCode[]
  barcodes  Barcode[]
  
  @@map("users")
}

// ðŸŽ¯ MODÃˆLE QR CODE
model QrCode {
  id           String   @id @default(cuid())
  typeProduit  String
  nomProduit   String
  franchise    String
  prixVente    Int      // en FCFA
  poids        Float
  unitePoids   String   // "g" ou "kg"
  fournisseur  String
  qrType       String   @default("raw") // "raw" ou "result"
  codePng      String   // QR code en base64 ou URL
  dateCreation DateTime @default(now())
  
  // ðŸ”— RELATION AVEC USER
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("qr_codes")
}

// ðŸ“Š MODÃˆLE CODE-BARRE
model Barcode {
  id           String   @id @default(cuid())
  nomProduit   String
  franchise    String
  reference    String   // RÃ©fÃ©rence unique du produit
  prixVente    Int      // en FCFA
  categorie    String   // CatÃ©gorie du produit
  fournisseur  String
  codePng      String   // Code-barre en base64 ou URL
  dateCreation DateTime @default(now())
  
  // ðŸ”— RELATION AVEC USER
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("barcodes")
}

// ðŸ“Š ENUM POUR LES RÃ”LES
enum Role {
  USER
  ADMIN
}
